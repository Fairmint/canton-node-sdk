name: Publish to GitHub Packages and Deploy Docs

on:
  push:
    branches:
      - main

jobs:
  publish-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pages: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@fairmint'

      - name: Install dependencies
        run: npm i

      - name: Build package
        run: npm run build

      - name: Prepare release
        run: npm run prepare-release

      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push git tag
        run: |
          # Get the new version from package.json
          NEW_VERSION=$(node -p "require('./package.json').version")
          
          # Read the changelog to create tag message
          CHANGELOG=$(cat CHANGELOG.md | head -100)
          
          # Create git tag with detailed message
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "v$NEW_VERSION" -m "$CHANGELOG"
          git push origin "v$NEW_VERSION"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate documentation
        run: npm run docs

      - name: Setup Ruby and Jekyll
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          working-directory: ./docs
          bundler-version: '2.4.22'

      - name: Build Jekyll site
        run: npm run docs:build
        env:
          JEKYLL_ENV: production

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs/_site'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
